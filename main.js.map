{"version":3,"sources":["./src/app/training/current-training/current-training.component.ts","./src/app/training/current-training/current-training.component.html","./src/app/auth/auth-guard.guard.ts","./src/app/navigation/sidenav-list/sidenav-list.component.ts","./src/app/navigation/sidenav-list/sidenav-list.component.html","./src/app/training/new-training/new-training.component.html","./src/app/training/new-training/new-training.component.ts","./src/environments/environment.ts","./src/app/training/current-training/stop-training.component.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/training/training.component.html","./src/app/training/training.component.ts","./src/app/training/training-plan/training-plan.component.ts","./src/app/training/training-plan/training-plan.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/training/past-training/past-training.component.ts","./src/app/training/past-training/past-training.component.html","./src/app/auth/auth.service.ts","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/app/training/training.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TrainingService } from '../training.service';\r\nimport { StopTrainingComponent } from './stop-training.component';\r\n\r\n@Component({\r\n  selector: 'app-current-training',\r\n  templateUrl: './current-training.component.html',\r\n  styleUrls: ['./current-training.component.css']\r\n})\r\nexport class CurrentTrainingComponent implements OnInit {\r\n  //@Output() stopEventStr = new EventEmitter();\r\n  progress = 0;\r\n  timer: any;\r\n  step : Number;\r\n  durationOfEx: Number;\r\n  nameOfEx: String;\r\n  constructor(private dialog: MatDialog, private trainingService: TrainingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.startOrResumeTImer();\r\n  }\r\n\r\n  startOrResumeTImer() {\r\n    this.durationOfEx = Number(this.trainingService.getRunningExercise().duration);\r\n    this.nameOfEx = this.trainingService.getRunningExercise().name;\r\n    this.step = Number(this.trainingService.getRunningExercise().duration) / 100 * 1000; \r\n    this.timer = setInterval(() => {\r\n      this.progress = this.progress + 1;\r\n      if(this.progress >= 100) {\r\n        this.trainingService.completeExercise();\r\n        clearInterval(this.timer);\r\n      }\r\n   },Number(this.step));\r\n  }\r\n\r\n  onStop() {\r\n    clearInterval(this.timer);\r\n    const dialogRef = this.dialog.open(StopTrainingComponent,{ data: {\r\n      progress: this.progress\r\n    } \r\n   });\r\n   dialogRef.afterClosed().subscribe(result => {\r\n     if(result) {\r\n       this.trainingService.cancelExercise(this.progress);\r\n       //this.stopEventStr.emit();\r\n     }\r\n     else {\r\n       this.startOrResumeTImer();\r\n     }\r\n   })\r\n  }\r\n\r\n}\r\n","<section fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"current-training\">\r\n    <mat-progress-spinner mode=\"determinate\" value=\"{{progress}}\"></mat-progress-spinner>\r\n    <h2>Duration of {{ nameOfEx }}: {{durationOfEx}}</h2>\r\n    <h1>{{progress}} %</h1>\r\n    <p>Keep on going, you can do it.</p>\r\n    <button mat-raised-button (click)=\"onStop()\"> Stop </button>\r\n</section>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if(this.authService.isAuth()) {\r\n      return true;\r\n    } \r\n    else {\r\n      this.router.navigate(['/login']);\r\n    }    \r\n    return true;    \r\n  }  \r\n}\r\n","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sidenav-list',\r\n  templateUrl: './sidenav-list.component.html',\r\n  styleUrls: ['./sidenav-list.component.css']\r\n})\r\nexport class SidenavListComponent implements OnInit, OnDestroy {\r\n  isAuth: boolean;\r\n  subscribedData : Subscription;\r\n  @Output() onToggleClose = new EventEmitter<void>();\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    let subscribedData = this.authService.authChange.subscribe(res => {\r\n      this.isAuth = res;\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.onToggleClose.emit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscribedData.unsubscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.onClose();\r\n  }\r\n\r\n}\r\n","<mat-nav-list>\r\n    <a *ngIf=\"!isAuth\" (click)=\"onClose()\" mat-list-item routerLink=\"/signup\">\r\n      <mat-icon>face</mat-icon>\r\n      <span class=\"nav-caption\">Sign up</span>\r\n    </a>\r\n    <a *ngIf=\"!isAuth\" (click)=\"onClose()\" mat-list-item routerLink=\"/login\">\r\n      <mat-icon>input</mat-icon>\r\n      <span class=\"nav-caption\">Login</span>\r\n    </a>\r\n    <a *ngIf=\"isAuth\" (click)=\"onClose() \" mat-list-item routerLink=\"/training\">\r\n      <mat-icon>fitness_center</mat-icon>\r\n      <span class=\"nav-caption\">Training</span>\r\n    </a>\r\n    <mat-list-item *ngIf=\"isAuth\"> \r\n      <button mat-icon-button click=\"onLogout()\">\r\n        <mat-icon>eject</mat-icon>\r\n        <span class=\"nav-caption\"> Logout </span>\r\n      </button>\r\n    </mat-list-item>\r\n</mat-nav-list>","<section class=\"new-training\" fxLayout fxLayoutAlign=\"center\">\r\n    <form (ngSubmit)=\"onClickNewTrain(f)\" #f=\"ngForm\">\r\n    <mat-card fxFlex.xs=\"100%\" fxFlex.ls=\"400px\">\r\n        <mat-card-title fxLayoutAlign=\"center\">\r\n            Time to start exercise.\r\n        </mat-card-title>\r\n        <mat-card-content fxLayoutAlign=\"center\">\r\n            <mat-form-field>\r\n                <mat-select placeholder=\"Choose exercise\" ngModel name=\"exercise\" required>\r\n                    <mat-option *ngFor=\"let exercise of exercises\" [value]=\"exercise.id\">\r\n                       {{ exercise.name }}\r\n                    </mat-option>                    \r\n                </mat-select>\r\n            </mat-form-field>\r\n        </mat-card-content>\r\n        <mat-card-actions fxLayoutAlign=\"center\">\r\n            <button type=\"submit\" [disabled]=\"f.invalid\"> Start </button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n    </form>\r\n</section>","import { Component, OnInit, OnDestroy, EventEmitter, Output } from '@angular/core';\r\nimport { Exercise } from '../exercise.model';\r\nimport { TrainingService } from '../training.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-new-training',\r\n  templateUrl: './new-training.component.html',\r\n  styleUrls: ['./new-training.component.css']\r\n})\r\nexport class NewTrainingComponent implements OnInit, OnDestroy {\r\n  //@Output() newTrainingStarted = new EventEmitter<void>();\r\n  //exercises: Observable<any>; \r\n  exercises: Exercise[];\r\n  exercisesChangesSubsrib: Subscription;\r\n  constructor(private trainingService: TrainingService, private db: AngularFirestore) { }\r\n\r\n  ngOnInit(): void {\r\n   // this.exercises = this.trainingService.getAvailableExercise();\r\n   this.exercisesChangesSubsrib = this.trainingService.exercisesChanged.subscribe(res => {\r\n    this.exercises = res;\r\n   })\r\n   this.trainingService.getAvailableExercise();                        \r\n                        // valueChanges();//.subscribe( res => {\r\n                //console.log('Value vhange result:',res); // Value changes is only for getting values not metadata like id etc.               //  });\r\n      //console.log('Exercises : :: :',this.exercises);\r\n  }\r\n\r\n  onClickNewTrain(frm: NgForm) {\r\n    //this.newTrainingStarted.emit();\r\n    this.trainingService.startSelectedExercise(frm.value.exercise);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.exercisesChangesSubsrib.unsubscribe();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyBfCsH8E76fcC9uniPhRR3ctSxitpZS-P8\",\r\n    authDomain: \"ng-fitness-tracker-7ba40.firebaseapp.com\",\r\n    projectId: \"ng-fitness-tracker-7ba40\",\r\n    storageBucket: \"ng-fitness-tracker-7ba40.appspot.com\",\r\n    messagingSenderId: \"288411422634\",\r\n    appId: \"1:288411422634:web:2d1121b80506056747e5d3\",\r\n    measurementId: \"G-N1XZ09CR5V\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-stop-training',\r\n    template: `<h1 mat-dialog-title> Are you sure ? </h1>\r\n               <mat-dialog-content>\r\n                  <p> You already got {{ passedData.progress }}%. </p>\r\n               </mat-dialog-content> \r\n               <mat-dialog-actions>\r\n                  <button mat-button [mat-dialog-close] = \"true\">Yes </button>\r\n                  <button mat-button [mat-dialog-close] = \"false\">No </button>\r\n               </mat-dialog-actions>`               \r\n})\r\n\r\nexport class StopTrainingComponent {\r\n    constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) {\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"welcome\" fxLayout=\"column\" fxLayout.gt-md=\"row\" fxLayoutGap.gt-md=\"20px\" fxLayoutAlign=\"center center\">\r\n    <section>\r\n        <h1>\r\n            Activity\r\n        </h1>\r\n        <p> Stay active and enjoy better health and more fun. </p>\r\n    </section>\r\n    <section>\r\n        <h1>\r\n            Community\r\n        </h1>\r\n        <p> Get to know other people who share your passion ! </p>\r\n    </section>\r\n    <section>\r\n        <h1>\r\n            Challenge\r\n        </h1>\r\n        <p> Never stop ! Dive into new challenges every day. </p>\r\n    </section>\r\n</div>","<section class=\"signup-form\">\r\n    <form fxLayout=\"column\" fxLayoutAlign=\"center center\" #f=\"ngForm\" fxLayoutGap=\"10px\" (ngSubmit)=\"onSubmit(f)\">\r\n        <mat-form-field>\r\n            <input type=\"email\" matInput placeholder=\"Your email\" ngModel name=\"email\" #hasInput=\"ngModel\" email required>\r\n            <mat-error *ngIf=\"hasInput.hasError('required')\"> Field must not be empty </mat-error>\r\n            <mat-error *ngIf=\"!hasInput.hasError('required')\"> Email is invalid </mat-error>\r\n        </mat-form-field> \r\n        <mat-form-field hintLabel=\"Should be atleast 6 characters long\">\r\n            <input type=\"password\" \r\n            matInput \r\n            placeholder=\"Enter your password\" \r\n            ngModel             \r\n            name=\"password\" \r\n            required\r\n            minlength=\"6\"\r\n            #pwInput=\"ngModel\"\r\n            >\r\n            <mat-hint align=\"end\">{{ pwInput.value?.length  }} / 6</mat-hint>\r\n            <mat-error> Password atleast should be 6 characters long.</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input matInput [max]=\"maxDate\" [matDatepicker]=\"picker\" placeholder=\"birthdate\" ngModel name=\"datepicker\" required>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n       \r\n        <mat-checkbox color=\"primary\" ngModel name=\"agree\">Agree to terms and conditions.</mat-checkbox>\r\n        \r\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled] = \"f.invalid\"> Submit </button>\r\n    </form>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  maxDate: any;\r\n  constructor(private authService: AuthService) { }\r\n\r\n  onSubmit(form: NgForm) {\r\n     console.log(form);\r\n     console.log('Email user : ',form.value.email)\r\n     console.log('Is form valid :', form.valid);\r\n\r\n     this.authService.registerUser({\r\n       email: form.value.email,\r\n       password: form.value.password\r\n     });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18 );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService}  from './auth/auth.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'materialDemo';\r\n  constructor(private authServer: AuthService) {}\r\n  ngOnInit() {\r\n     this.authServer.initAuthListener();\r\n  }\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav #sidenav role=\"navigation\">\r\n    <app-sidenav-list (onToggleClose)=\"sidenav.close()\"></app-sidenav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <app-header (sideNavToggle)=\"sidenav.toggle()\"></app-header>\r\n    <main>\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","<mat-tab-group *ngIf=\"!onGoingTraining\">\r\n    <mat-tab label=\"New Exercise\"> \r\n        <!--<app-new-training (newTrainingStarted)=\"onGoingTraining = true\"></app-new-training>-->\r\n        <app-new-training></app-new-training>\r\n    </mat-tab>\r\n    <mat-tab label=\"Past Exercies\">\r\n        <app-past-training></app-past-training>\r\n    </mat-tab>\r\n    <mat-tab label=\"Add / Update / View Exercise plan\">\r\n        <app-training-plan></app-training-plan>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n\r\n<!--<app-current-training *ngIf=\"onGoingTraining\" (stopEventStr) = \"onGoingTraining = false\"></app-current-training>-->\r\n<app-current-training *ngIf=\"onGoingTraining\"></app-current-training>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { TrainingService } from './training.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-training',\r\n  templateUrl: './training.component.html',\r\n  styleUrls: ['./training.component.css']\r\n})\r\nexport class TrainingComponent implements OnInit {\r\n  onGoingTraining = false;\r\n  exerciseSubscription: Subscription;\r\n  constructor(private trainingSerice: TrainingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.exerciseSubscription = this.trainingSerice.exerciseChanged.subscribe(res => {\r\n      if(res) {\r\n        this.onGoingTraining = true;\r\n      }else {\r\n        this.onGoingTraining = false;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-training-plan',\r\n  templateUrl: './training-plan.component.html',\r\n  styleUrls: ['./training-plan.component.css']\r\n})\r\nexport class TrainingPlanComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>training-plan works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule} from '@angular/material/icon';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { TrainingComponent } from './training/training.component';\r\nimport { CurrentTrainingComponent } from './training/current-training/current-training.component';\r\nimport { NewTrainingComponent } from './training/new-training/new-training.component';\r\nimport { PastTrainingComponent } from './training/past-training/past-training.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FlexLayoutModule} from '@angular/flex-layout';\r\nimport { MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { MatSidenavModule} from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'; \r\nimport { MatListModule} from '@angular/material/list';\r\nimport { HeaderComponent } from './navigation/header/header.component';\r\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\r\nimport { MatTabsModule} from '@angular/material/tabs';\r\nimport { MatCardModule} from '@angular/material/card';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule} from '@angular/material/dialog';\r\nimport { StopTrainingComponent } from './training/current-training/stop-training.component';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule} from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { TrainingPlanComponent } from './training/training-plan/training-plan.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    TrainingComponent,\r\n    CurrentTrainingComponent,\r\n    NewTrainingComponent,\r\n    PastTrainingComponent,\r\n    WelcomeComponent,\r\n    HeaderComponent,\r\n    SidenavListComponent,\r\n    StopTrainingComponent,\r\n    TrainingPlanComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FlexLayoutModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    \r\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\r\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\r\n    AngularFireStorageModule, \r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n  ],\r\n  providers: [AuthService],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [StopTrainingComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm, FormGroup, FormControl, Validators}  from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private authService: AuthService) { \r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('',{validators:[Validators.required, Validators.email]}),\r\n      password: new FormControl('',{validators:[Validators.required]})\r\n    })\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    console.log(form);\r\n    this.authService.login({\r\n      email: this.loginForm.value.email,\r\n      password:this.loginForm.value.password\r\n    })\r\n }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"login-form\">\r\n  <form fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" [formGroup]=\"loginForm\"\r\n    (submit)=\"onSubmit(loginForm)\">\r\n    <mat-form-field>\r\n      <input type=\"email\" matInput placeholder=\"Your email\" formControlName=\"email\">\r\n      <mat-error *ngIf=\"loginForm.controls['email'].hasError('required')\"> Field must not be empty </mat-error>\r\n      <mat-error *ngIf=\"!loginForm.controls['email'].hasError('required')\"> Email is invalid </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input type=\"password\" matInput placeholder=\"Enter your password\" formControlName=\"password\">\r\n      <mat-error *ngIf=\"loginForm.controls['password'].hasError('required')\"> Field must not be empty </mat-error>\r\n    </mat-form-field>\r\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"loginForm.status === 'INVALID'\"> Login </button>\r\n  </form>\r\n</section>","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Exercise } from '../exercise.model';\r\nimport { TrainingService } from '../training.service';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-past-training',\r\n  templateUrl: './past-training.component.html',\r\n  styleUrls: ['./past-training.component.css']\r\n})\r\nexport class PastTrainingComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  displayedColumns = ['date','name','duration','calories', 'state'];\r\n  dataSource = new MatTableDataSource<Exercise>();\r\n  exdataSourcevalChanged : Subscription; \r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;  \r\n  constructor(private trainingService: TrainingService) { }\r\n\r\n  ngOnInit(): void {  \r\n    this.exdataSourcevalChanged = this.trainingService.finishedExeriseChanged.subscribe((exercises: Exercise[])=>{\r\n      this.dataSource.data = exercises;\r\n    })\r\n    this.trainingService.getCompletedOrCancelledExercise();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  doFilter(filtervalue:Event) {\r\n    this.dataSource.filter = (<HTMLInputElement>filtervalue.target).value.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.exdataSourcevalChanged.unsubscribe();\r\n  }\r\n}\r\n","<div fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"40%\">\r\n        <input matInput type=\"text\" (keyup)=\"doFilter($event)\" placeholder=\"Filter\">\r\n    </mat-form-field>\r\n</div>\r\n<mat-table [dataSource]=\"dataSource\" matSort>    \r\n    <ng-container matColumnDef=\"date\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Date </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.date.toDate() | date: 'dd/MM/yyyy' }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"name\" >\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"calories\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Calories </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.calories | number }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"duration\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Duration </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.duration | number }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"state\">\r\n        <mat-header-cell *matHeaderCellDef> State </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">{{ element.state }}</mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n<mat-paginator [pageSize]=\"1\" [pageSizeOptions]=\"[1, 5, 10, 20]\" showFirstLastButtons></mat-paginator>","import { Injectable } from '@angular/core';\r\nimport { User } from \"./User.model\";\r\nimport { AuthDatav } from \"./auth-data.model\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TrainingService } from '../training/training.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    authChange = new Subject<boolean>();\r\n    emailUser = new Subject<any>();\r\n    private isAuthenticated = false;\r\n    user: User;\r\n\r\n    constructor(private route: Router, private afAuth: AngularFireAuth,\r\n        private trainingService: TrainingService, private snackBar: MatSnackBar) {\r\n    }\r\n\r\n    initAuthListener() {\r\n        this.afAuth.authState.subscribe((user) => {\r\n            if (user) {\r\n                this.isAuthenticated = true;\r\n                this.authChange.next(true);\r\n                this.route.navigate(['/training']);\r\n            } else {\r\n                localStorage.removeItem('currentUser');\r\n                this.trainingService.cancelSubscription();                \r\n                this.authChange.next(false);\r\n                this.route.navigate(['/login']);\r\n                this.isAuthenticated = false;\r\n            }\r\n        })\r\n    }\r\n\r\n    registerUser(authData: AuthDatav) {\r\n        /*this.user = { \r\n            email: authData.email,\r\n            userId: Math.round(Math.random() * 10000).toString()\r\n        };*/\r\n\r\n        this.afAuth.createUserWithEmailAndPassword(authData.email, authData.password).\r\n            then(result => {\r\n                console.log(result);\r\n                localStorage.setItem('currentUser', authData.email);\r\n                this.emailUser.next(authData.email);\r\n                //this.AuthenticateAndSuccessLogin();\r\n            })\r\n            .catch(err => {\r\n                this.snackBar.open(err.message, null, {\r\n                    duration: 3000\r\n                });\r\n                \r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    login(authData: AuthDatav) {\r\n        /*this.user = {\r\n            email: authData.email,\r\n            userId: Math.round(Math.random() * 10000).toString()\r\n        };*/\r\n        this.afAuth.signInWithEmailAndPassword(authData.email, authData.password)\r\n            .then(result => {\r\n                console.log(result);\r\n                localStorage.setItem('currentUser', authData.email);\r\n                this.emailUser.next(authData.email);\r\n                //this.AuthenticateAndSuccessLogin();\r\n            })\r\n            .catch(err => {\r\n\r\n                this.snackBar.open(err.message, null, {\r\n                    duration: 3000\r\n                });\r\n                console.log(err);\r\n            });\r\n        //this.AuthenticateAndSuccessLogin();\r\n    }\r\n\r\n    logout() {\r\n        //localStorage.removeItem('currentUser');\r\n        //this.trainingService.cancelSubscription();\r\n        this.afAuth.signOut();\r\n        //this.authChange.next(false);\r\n        //this.route.navigate(['/login']);\r\n        //this.isAuthenticated = false;\r\n    }\r\n\r\n    isAuth() {\r\n        return this.isAuthenticated;\r\n    }\r\n\r\n    private AuthenticateAndSuccessLogin() {\r\n        // this.isAuthenticated = true;\r\n        // this.authChange.next(true);\r\n        //  this.route.navigate(['/training']);\r\n    }\r\n}","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  isChanged: boolean;\r\n  subscribedData: Subscription;\r\n  @Output() sideNavToggle = new EventEmitter<void>();\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {    \r\n    let subscribedData = this.authService.authChange.subscribe(res => {\r\n       this.isChanged = res;\r\n    });\r\n  }\r\n\r\n  onToggleSideNav() {\r\n    this.sideNavToggle.emit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscribedData.unsubscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <div fxHide.gt-xs>\r\n      <button (click)=\"onToggleSideNav()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <a routerLink=\"/\"><mat-icon>home</mat-icon></a>        \r\n    </div>      \r\n    <div fxFlex fxLayout fxLayoutAlign=\"flex-end\" fxHide.xs>\r\n      <ul fxLayout fxLayoutGap=\"10px\" class=\"navigation-items\">\r\n        <li *ngIf=\"!isChanged\">\r\n          <a routerLink=\"/signup\">Signup</a>\r\n        </li>\r\n        <li *ngIf=\"!isChanged\">\r\n          <a routerLink=\"/login\">Login</a>\r\n        </li>\r\n        <li *ngIf=\"isChanged\">\r\n          <a routerLink=\"/training\">Training</a>\r\n        </li>\r\n        <li style=\"cursor: pointer;\" (click)=\"onLogout()\" *ngIf=\"isChanged\">\r\n          <a> Logout  </a>\r\n        </li>\r\n      </ul>       \r\n    </div>\r\n  </mat-toolbar>","import { Injectable, Injector } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Exercise } from './exercise.model';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n//import { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrainingService {\r\n  exerciseChanged = new Subject<Exercise>(); \r\n  exercisesChanged = new Subject<Exercise[]>();\r\n  finishedExeriseChanged = new Subject<Exercise[]>();\r\n  availableExercise = [];\r\n/*  [\r\n    {id: 'crunches', name: 'Crunches', duration: 30, calories: 8  },\r\n    {id: 'touch-toes', name: 'Touch-Toes', duration: 180, calories: 15 },\r\n    {id: 'side-lunges', name: 'Side-lunges', duration: 120, calories: 18 },\r\n    {id: 'burpees', name: 'Burpees', duration: 60, calories: 8 }\r\n  ]; */\r\n\r\n  private runningExercise: Exercise;\r\n  private finishedexercisess: Exercise[] = [];\r\n  private fbSubsc: Subscription[] = [];\r\n  emailUsername: any;\r\n  constructor(private db: AngularFirestore, private injector: Injector) {\r\n    this.emailUsername = localStorage.getItem('currentUser');\r\n  }\r\n \r\n  getAvailableExercise() {\r\n    //return this.availableExercise.slice();\r\n\r\n    this.fbSubsc.push(this.db.collection('availableExercises').snapshotChanges().pipe( map(actions => {\r\n      return actions.map(a => {\r\n        return {\r\n          id: a.payload.doc.id,\r\n          name: a.payload.doc.data()[`name`],\r\n          duration:a.payload.doc.data()[`duration`],\r\n          calories:a.payload.doc.data()[`calories`]\r\n       }\r\n     })\r\n    })  \r\n    ). subscribe( (exercises) => {\r\n         this.availableExercise = exercises;\r\n         this.exercisesChanged.next([...this.availableExercise]);\r\n         console.log('Avail ex:',this.availableExercise);\r\n    }, error => {\r\n       console.log(error);\r\n    }));\r\n  }\r\n\r\n  startSelectedExercise(selectedId: String) {\r\n    this.runningExercise = this.availableExercise.find(ex => ex.id === selectedId);\r\n    this.exerciseChanged.next({...this.runningExercise});\r\n  }\r\n\r\n  completeExercise() {\r\n   // this.exercisess.push(\r\n     this.addDataToDataBase( {...this.runningExercise,      \r\n       date: new Date(),\r\n       state: 'completed',\r\n       exUser: this.emailUsername\r\n      }\r\n    );\r\n    this.runningExercise = null;\r\n    this.exerciseChanged.next(null);\r\n  }\r\n\r\n  cancelExercise(progress: Number) {\r\n//    this.exercisess.push(\r\n  this.addDataToDataBase(\r\n      {...this.runningExercise,\r\n       duration: Number(this.runningExercise.duration) * (Number(progress) / 100 ),       \r\n       calories: Number(this.runningExercise.calories) * (Number(progress) / 100 ),\r\n       date: new Date(),\r\n       state: 'cancelled',\r\n       exUser: this.emailUsername\r\n      }\r\n    );\r\n    this.runningExercise = null;\r\n    this.exerciseChanged.next(null);\r\n  }\r\n\r\n  getRunningExercise() {\r\n    return {...this.runningExercise};\r\n  }\r\n\r\n  getCompletedOrCancelledExercise() {\r\n    this.fbSubsc.push(this.db.collection('finishedExercises', ref => ref.where('exUser', '==', localStorage.getItem('currentUser'))).valueChanges().subscribe((exercises: Exercise[]) => {\r\n      this.finishedexercisess = exercises;\r\n      this.finishedExeriseChanged.next(this.finishedexercisess);\r\n    }, error => {\r\n\r\n    }));\r\n  }\r\n\r\n  cancelSubscription() {\r\n    this.fbSubsc.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  private addDataToDataBase(exercise: Exercise) {\r\n    this.db.collection('finishedExercises').add(exercise);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuardGuard } from './auth/auth-guard.guard';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { TrainingComponent } from './training/training.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component:WelcomeComponent},\r\n  {path: 'signup', component:SignupComponent},\r\n  {path: 'login', component:LoginComponent},\r\n  {path: 'training', component:TrainingComponent, canActivate:[AuthGuardGuard]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers:[AuthGuardGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}